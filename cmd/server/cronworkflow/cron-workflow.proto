syntax = "proto3";
option go_package = "github.com/argoproj/argo/cmd/server/cronworkflow";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";

package cronworkflow;

message ListCronWorkflowsRequest {
    string namespace = 1;
    k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions listOptions = 2;
}
message GetCronWorkflowRequest {
    string cronWorkflowName = 1;
    string namespace = 2;
    k8s.io.apimachinery.pkg.apis.meta.v1.GetOptions getOptions = 3;
}

service CronWorkflowService {
    rpc ListCronWorkflows (ListCronWorkflowsRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.CronWorkflowList) {
        option (google.api.http).get = "/api/v1/cron-workflows/{namespace}";
    }

    rpc GetCronWorkflow (GetCronWorkflowRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.CronWorkflow) {
        option (google.api.http).get = "/api/v1/cron-workflows/{namespace}/{cronWorkflowName}";
    }

}