syntax = "proto3";
option go_package = "github.com/argoproj/argo/cmd/server/workflowtemplate";


import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";

// Workflow Service
//
// Workflow Service API performs CRUD actions against application resources
package workflowtemplate;


message WorkflowTemplateCreateRequest {
    github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate template = 1;
    k8s.io.apimachinery.pkg.apis.meta.v1.CreateOptions createOptions = 2;
}

message WorkflowTemplateGetRequest {
    string templateName = 1;
    string namespace = 2;
    k8s.io.apimachinery.pkg.apis.meta.v1.GetOptions getOptions = 3;
}

message WorkflowTemplateListRequest {
    string namespace = 1;
    k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions listOptions = 2;
}

message WorkflowTemplateUpdateRequest {
    string templateName = 1;
    string namespace = 2;
    github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate template = 3;
}

message WorkflowTemplateSpecUpdateRequest {
    string templateName = 1;
    string namespace = 2;
    github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplateSpec templateSpec = 3;
}

message WorkflowTemplateDeleteRequest {
    string templateName = 1;
    string namespace = 2;
    k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions deleteOptions = 3;
}

message WorkflowDeleteResponse {
}

message WorkflowTemplateLintRequest {
    github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate template = 1;
}

service WorkflowTemplateService {
    rpc CreateWorkflowTemplate (WorkflowTemplateCreateRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate) {
        option (google.api.http) = {
			post: "/api/v1/workflow-templates"
			body: "*"
		};
    }

    rpc GetWorkflowTemplate (WorkflowTemplateGetRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate) {
        option (google.api.http).get = "/api/v1/workflow-templates/{namespace}/{templateName}";
    }

    rpc ListWorkflowTemplates (WorkflowTemplateListRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplateList) {
        option (google.api.http).get = "/api/v1/workflow-templates/{namespace}";
    }

    rpc UpdateWorkflowTemplate (WorkflowTemplateUpdateRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate) {
        option (google.api.http) = {
            put: "/api/v1/workflow-templates/{namespace}/{templateName}"
            body: "*"
        };
    }

    rpc UpdateWorkflowTemplateSpec (WorkflowTemplateSpecUpdateRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplateSpec) {
        option (google.api.http) = {
            put: "/api/v1/workflow-templates/{namespace}/{templateName}/spec"
            body: "*"
        };
    }

    rpc DeleteWorkflowTemplate (WorkflowTemplateDeleteRequest) returns (WorkflowDeleteResponse) {
        option (google.api.http).delete = "/api/v1/workflow-templates/{namespace}/{templateName}";
    }

    rpc LintWorkflowTemplate (WorkflowTemplateLintRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowTemplate) {
        option (google.api.http) = {
			post: "/api/v1/workflow-templates/lint"
			body: "*"
		};
    }

}